version: "3"
services:
  base:
    image: roshumble:base
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        ROS_DISTRO: humble
      target: base
      # Inside docker file, FROM xxx AS base
    # Interactive shell
    stdin_open: true
    tty: true
    # Networking and IPC for ROS 2. To prevent creating a new IP address for each container
    network_mode: host
    ipc: host
    pid: host
    # Needed to access devices and display graphical applications
    privileged: true
    volumes:
      # Allows graphical programs in the container.
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ${XAUTHORITY:-$HOME/.Xauthority}:/root/.Xauthority
      # Allow access to host devices
      - /dev:/dev
    device_cgroup_rules:
      - 'c *:* rmw'
    environment:
      - ROS_DOMAIN_ID

  overlay:
    extends: base
    image: roshumble:overlay
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: overlay
    environment:
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /tmp/.docker.xauth:/tmp/.docker.xauth:rw

  devel:
    extends: base
    image: roshumble:devel
    command: /bin/bash
    # This just launches shell. could put ros2 run ... in command instead. Need to figure out how to run multiple commands
    # Maybe could instead run a launch file to run all these files? Look into it
    # Could create multiple containers for each command as a solution
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: devel
    environment:
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
      - ${XAUTHORITY:-$HOME/.Xauthority}:/root/.Xauthority
      - /dev:/dev